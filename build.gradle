buildscript {
	ext {
		springbootVersion = '3.2.4'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springbootVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.palantir.docker' version '0.26.0'
}

group = 'a124fr'
version = '0.0.1-SNAPSHOT'

bootJar {
	baseName 'curso_aws_project01'
	version '1.0.0'
}

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.register('unpack', Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

//Já está preparado para gerar imagem no formato linux/amd64, inclusive em computadores com processadores ARM, como os novos Macbook.
//A variável project.name deve ser configurada no arquivo settings.gradle
docker {
	name "${project.group}/${bootJar.baseName}"
	version "${bootJar.version}"
	tags "${bootJar.version}"
//	buildx true
//	platform 'linux/amd64'
	copySpec.from(tasks.unpack.outputs).into('dependency')
	buildArgs(['DEPENDENCY' : "dependency"])
}


tasks.named('test') {
	useJUnitPlatform()
}
